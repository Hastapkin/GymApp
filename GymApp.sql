-- =============================================
-- SCRIPT TẠO BẢNG VÀ DỮ LIỆU MẪU
-- Chạy với user C##GymApp/a123
-- =============================================

-- Xóa bảng nếu đã tồn tại (để chạy lại script)
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MembershipCards CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE Members CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE Staff CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE Packages CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- =============================================
-- TẠO CÁC BẢNG
-- =============================================

-- Bảng Members (Thành viên)
CREATE TABLE Members (
    Id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FullName NVARCHAR2(100) NOT NULL,
    Phone NVARCHAR2(20),
    Email NVARCHAR2(100),
    Gender NVARCHAR2(10) CHECK (Gender IN ('Nam', 'Nữ', 'Khác')),
    DateOfBirth DATE,
    Address NVARCHAR2(200),
    JoinDate DATE DEFAULT SYSDATE,
    IsActive NUMBER(1) DEFAULT 1 CHECK (IsActive IN (0,1)),
    Notes NVARCHAR2(500),
    CreatedDate DATE DEFAULT SYSDATE,
    UpdatedDate DATE DEFAULT SYSDATE
);

-- Bảng Packages (Gói tập)
CREATE TABLE Packages (
    Id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    PackageName NVARCHAR2(100) NOT NULL,
    Description NVARCHAR2(500),
    DurationDays NUMBER NOT NULL,
    Price NUMBER(10,2) NOT NULL,
    IsActive NUMBER(1) DEFAULT 1 CHECK (IsActive IN (0,1)),
    CreatedDate DATE DEFAULT SYSDATE
);

-- Bảng MembershipCards (Thẻ tập)
CREATE TABLE MembershipCards (
    Id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    MemberId NUMBER NOT NULL,
    PackageId NUMBER NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Price NUMBER(10,2) NOT NULL,
    PaymentMethod NVARCHAR2(50) DEFAULT 'Tiền mặt',
    Status NVARCHAR2(20) DEFAULT 'Hoạt động' CHECK (Status IN ('Hoạt động', 'Hết hạn', 'Tạm ngưng')),
    Notes NVARCHAR2(500),
    CreatedDate DATE DEFAULT SYSDATE,
    CreatedBy NVARCHAR2(50) DEFAULT 'Admin',
    CONSTRAINT FK_MemberId FOREIGN KEY (MemberId) REFERENCES Members(Id) ON DELETE CASCADE,
    CONSTRAINT FK_PackageId FOREIGN KEY (PackageId) REFERENCES Packages(Id)
);

-- Bảng Staff (Nhân viên)
CREATE TABLE Staff (
    Id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FullName NVARCHAR2(100) NOT NULL,
    Phone NVARCHAR2(20),
    Email NVARCHAR2(100),
    Role NVARCHAR2(50) NOT NULL CHECK (Role IN ('Lao công', 'Thu ngân', 'Quản lý', 'Huấn luyện viên')),
    StartDate DATE DEFAULT SYSDATE,
    Salary NUMBER(10,2) DEFAULT 0,
    Address NVARCHAR2(200),
    IsActive NUMBER(1) DEFAULT 1 CHECK (IsActive IN (0,1)),
    Notes NVARCHAR2(500),
    CreatedDate DATE DEFAULT SYSDATE
);

-- Bảng CheckInLog (Lịch sử check-in)
CREATE TABLE CheckInLog (
    Id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    MemberId NUMBER NOT NULL,
    CheckInTime DATE DEFAULT SYSDATE,
    CheckOutTime DATE,
    Notes NVARCHAR2(200),
    CONSTRAINT FK_CheckIn_MemberId FOREIGN KEY (MemberId) REFERENCES Members(Id)
);

-- =============================================
-- TẠO INDEX
-- =============================================

-- Index cho tìm kiếm nhanh
CREATE INDEX IDX_Members_FullName ON Members(FullName);
CREATE INDEX IDX_Members_Phone ON Members(Phone);
CREATE INDEX IDX_MembershipCards_MemberId ON MembershipCards(MemberId);
CREATE INDEX IDX_MembershipCards_EndDate ON MembershipCards(EndDate);
CREATE INDEX IDX_CheckInLog_MemberId ON CheckInLog(MemberId);
CREATE INDEX IDX_CheckInLog_CheckInTime ON CheckInLog(CheckInTime);

-- =============================================
-- THÊM DỮ LIỆU MẪU
-- =============================================

-- Thêm gói tập mẫu
INSERT INTO Packages (PackageName, Description, DurationDays, Price) VALUES 
('Gói 1 tháng', 'Gói tập cơ bản 1 tháng', 30, 500000);

INSERT INTO Packages (PackageName, Description, DurationDays, Price) VALUES 
('Gói 3 tháng', 'Gói tập 3 tháng tiết kiệm', 90, 1400000);

INSERT INTO Packages (PackageName, Description, DurationDays, Price) VALUES 
('Gói 6 tháng', 'Gói tập 6 tháng ưu đãi', 180, 2700000);

INSERT INTO Packages (PackageName, Description, DurationDays, Price) VALUES 
('Gói 1 năm', 'Gói tập 1 năm VIP', 365, 5000000);

-- Thêm nhân viên mẫu
INSERT INTO Staff (FullName, Phone, Role, Salary, Address) VALUES 
('Nguyễn Thị Lan', '0987654321', 'Lao công', 8000000, 'Hà Nội');

INSERT INTO Staff (FullName, Phone, Role, Salary, Address) VALUES 
('Trần Văn Nam', '0123456789', 'Thu ngân', 12000000, 'Hà Nội');


-- Kiểm tra dữ liệu
SELECT * FROM Members;
SELECT * FROM Staff;
SELECT * FROM Packages;
SELECT * FROM MembershipCards;
SELECT * FROM V_MemberInfo;

-- Oracle Identity columns cho tất cả tables
-- 1. Members table
ALTER TABLE Members MODIFY Id GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH LIMIT VALUE);

-- 2. Packages table  
ALTER TABLE Packages MODIFY Id GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH LIMIT VALUE);

-- 3. Staff table
ALTER TABLE Staff MODIFY Id GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH LIMIT VALUE);

-- 4. MembershipCards table
ALTER TABLE MembershipCards MODIFY Id GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH LIMIT VALUE);

-- Commit changes
COMMIT;


DROP VIEW V_MemberInfo;

-- Tạo view mới với logic chính xác:
-- Mỗi Member chỉ hiển thị thẻ tập có EndDate gần nhất (thẻ hiện tại)
CREATE VIEW V_MemberInfo AS
SELECT 
    m.Id,
    m.FullName,
    m.Phone,
    m.Email,
    m.Gender,
    m.JoinDate,
    
    -- Thông tin thẻ tập hiện tại (thẻ có EndDate gần nhất)
    mc.StartDate,
    mc.EndDate,
    p.PackageName,
    mc.Price,
    mc.Status,
    
    -- Tính trạng thái thành viên dựa trên thẻ hiện tại
    CASE 
        WHEN mc.EndDate >= SYSDATE AND mc.Status = 'Hoạt động' THEN 'Còn hạn'
        WHEN mc.EndDate < SYSDATE OR mc.Status != 'Hoạt động' THEN 'Hết hạn'
        ELSE 'Chưa có thẻ'
    END as MembershipStatus,
    
    -- Số ngày còn lại (có thể âm nếu hết hạn)
    TRUNC(mc.EndDate - SYSDATE) as DaysRemaining
    
FROM Members m
LEFT JOIN (
    -- Subquery để lấy thẻ tập hiện tại (EndDate gần nhất) của mỗi member
    SELECT 
        mc1.MemberId,
        mc1.Id,
        mc1.PackageId,
        mc1.StartDate,
        mc1.EndDate,
        mc1.Price,
        mc1.Status
    FROM MembershipCards mc1
    WHERE mc1.EndDate = (
        -- Lấy EndDate lớn nhất của member đó
        SELECT MAX(mc2.EndDate)
        FROM MembershipCards mc2
        WHERE mc2.MemberId = mc1.MemberId
    )
) mc ON m.Id = mc.MemberId
LEFT JOIN Packages p ON mc.PackageId = p.Id
WHERE m.IsActive = 1;

-- ===================================================
-- 1. INSERT MEMBERS
-- ===================================================

-- Member 1: Lê Minh Tuấn
INSERT INTO Members (FullName, Phone, Email, Gender, DateOfBirth, Address, JoinDate, IsActive, Notes, CreatedDate, UpdatedDate)
VALUES (
    'Lê Minh Tuấn', 
    '0901234567', 
    'tuan@email.com', 
    'Nam', 
    DATE '1990-05-15', 
    'Cầu Giấy, Hà Nội', 
    DATE '2025-01-15', 
    1, 
    'Thành viên VIP, quan tâm đến cardio và yoga',
    SYSDATE, 
    SYSDATE
);

-- Member 2: Phạm Thị Hoa  
INSERT INTO Members (FullName, Phone, Email, Gender, DateOfBirth, Address, JoinDate, IsActive, Notes, CreatedDate, UpdatedDate)
VALUES (
    'Phạm Thị Hoa', 
    '0912345678', 
    'hoa@email.com', 
    'Nữ', 
    DATE '1995-08-20', 
    'Thanh Xuân, Hà Nội', 
    DATE '2025-02-01', 
    1, 
    'Thích tập group fitness, đã tham gia lớp zumba',
    SYSDATE, 
    SYSDATE
);

-- Member 3: Hoàng Văn Đức
INSERT INTO Members (FullName, Phone, Email, Gender, DateOfBirth, Address, JoinDate, IsActive, Notes, CreatedDate, UpdatedDate)
VALUES (
    'Hoàng Văn Đức', 
    '0923456789', 
    'duc@email.com', 
    'Nam', 
    DATE '1988-12-10', 
    'Đống Đa, Hà Nội', 
    DATE '2025-01-01', 
    1, 
    'Bodybuilder, tập trọng lượng nặng, có kinh nghiệm 5 năm',
    SYSDATE, 
    SYSDATE
);

-- Member 4: Nguyễn Thị Mai
INSERT INTO Members (FullName, Phone, Email, Gender, DateOfBirth, Address, JoinDate, IsActive, Notes, CreatedDate, UpdatedDate)
VALUES (
    'Nguyễn Thị Mai', 
    '0934567890', 
    'mai@email.com', 
    'Nữ', 
    DATE '1992-03-25', 
    'Ba Đình, Hà Nội', 
    DATE '2025-02-15', 
    1, 
    'Mới bắt đầu tập gym, cần hướng dẫn cơ bản',
    SYSDATE, 
    SYSDATE
);

-- Member 5: Vũ Minh Hải
INSERT INTO Members (FullName, Phone, Email, Gender, DateOfBirth, Address, JoinDate, IsActive, Notes, CreatedDate, UpdatedDate)
VALUES (
    'Vũ Minh Hải', 
    '0945678901', 
    'hai@email.com', 
    'Nam', 
    DATE '1985-07-08', 
    'Hoàn Kiếm, Hà Nội', 
    DATE '2025-01-01', 
    1, 
    'Luyện tập marathon, tập trung vào endurance training',
    SYSDATE, 
    SYSDATE
);

-- ===================================================
-- 2. INSERT MEMBERSHIP CARDS
-- ===================================================

-- Lấy Member IDs
DECLARE
    v_member_id_1 NUMBER;
    v_member_id_2 NUMBER;
    v_member_id_3 NUMBER;
    v_member_id_4 NUMBER;
    v_member_id_5 NUMBER;
BEGIN
    -- Lấy IDs của các members vừa tạo
    SELECT Id INTO v_member_id_1 FROM Members WHERE FullName = 'Lê Minh Tuấn';
    SELECT Id INTO v_member_id_2 FROM Members WHERE FullName = 'Phạm Thị Hoa';
    SELECT Id INTO v_member_id_3 FROM Members WHERE FullName = 'Hoàng Văn Đức';
    SELECT Id INTO v_member_id_4 FROM Members WHERE FullName = 'Nguyễn Thị Mai';
    SELECT Id INTO v_member_id_5 FROM Members WHERE FullName = 'Vũ Minh Hải';

    -- Membership Card 1: Lê Minh Tuấn - Gói 3 tháng
    INSERT INTO MembershipCards (MemberId, PackageId, StartDate, EndDate, Price, PaymentMethod, Status, Notes, CreatedDate, CreatedBy)
    VALUES (
        v_member_id_1, 
        2, -- Gói 3 tháng (90 ngày)
        DATE '2025-01-15', 
        DATE '2025-04-15', 
        1400000, 
        'Tiền mặt', 
        'Hoạt động',
        'Đăng ký gói 3 tháng, thanh toán một lần',
        DATE '2025-01-15', 
        'Admin'
    );

    -- Membership Card 2: Phạm Thị Hoa - Gói 1 tháng  
    INSERT INTO MembershipCards (MemberId, PackageId, StartDate, EndDate, Price, PaymentMethod, Status, Notes, CreatedDate, CreatedBy)
    VALUES (
        v_member_id_2, 
        1, -- Gói 1 tháng (30 ngày)
        DATE '2025-02-01', 
        DATE '2025-03-03', -- 30 ngày sau 01/02
        500000, 
        'Chuyển khoản', 
        'Hoạt động',
        'Gói trải nghiệm 1 tháng, thành viên mới',
        DATE '2025-02-01', 
        'Admin'
    );

    -- Membership Card 3: Hoàng Văn Đức - Gói 6 tháng
    INSERT INTO MembershipCards (MemberId, PackageId, StartDate, EndDate, Price, PaymentMethod, Status, Notes, CreatedDate, CreatedBy)
    VALUES (
        v_member_id_3, 
        3, -- Gói 6 tháng (180 ngày)
        DATE '2025-01-01', 
        DATE '2025-07-01', -- 180 ngày sau 01/01
        2700000, 
        'Tiền mặt', 
        'Hoạt động',
        'Gói 6 tháng cho bodybuilder, có discount 5%',
        DATE '2025-01-01', 
        'Admin'
    );

    -- Membership Card 4: Nguyễn Thị Mai - Gói 1 tháng
    INSERT INTO MembershipCards (MemberId, PackageId, StartDate, EndDate, Price, PaymentMethod, Status, Notes, CreatedDate, CreatedBy)
    VALUES (
        v_member_id_4, 
        1, -- Gói 1 tháng (30 ngày)
        DATE '2025-02-15', 
        DATE '2025-03-17', -- 30 ngày sau 15/02
        500000, 
        'Tiền mặt', 
        'Hoạt động',
        'Thành viên mới, gói khởi động',
        DATE '2025-02-15', 
        'Admin'
    );

    -- Membership Card 5: Vũ Minh Hải - Gói 1 năm VIP
    INSERT INTO MembershipCards (MemberId, PackageId, StartDate, EndDate, Price, PaymentMethod, Status, Notes, CreatedDate, CreatedBy)
    VALUES (
        v_member_id_5, 
        4, -- Gói 1 năm (365 ngày)
        DATE '2025-01-01', 
        DATE '2025-12-31', -- 365 ngày sau 01/01
        5000000, 
        'Chuyển khoản', 
        'Hoạt động',
        'Gói VIP 1 năm, bao gồm PT và massage',
        DATE '2025-01-01', 
        'Admin'
    );

    DBMS_OUTPUT.PUT_LINE('=== ĐÃ TẠO 5 MEMBERS VÀ MEMBERSHIP CARDS ===');
    DBMS_OUTPUT.PUT_LINE('1. Lê Minh Tuấn - Gói 3 tháng (01/01 - 15/04)');
    DBMS_OUTPUT.PUT_LINE('2. Phạm Thị Hoa - Gói 1 tháng (01/02 - 03/03)');
    DBMS_OUTPUT.PUT_LINE('3. Hoàng Văn Đức - Gói 6 tháng (01/01 - 01/07)');
    DBMS_OUTPUT.PUT_LINE('4. Nguyễn Thị Mai - Gói 1 tháng (15/02 - 17/03)');
    DBMS_OUTPUT.PUT_LINE('5. Vũ Minh Hải - Gói 1 năm VIP (01/01 - 31/12)');
END;
/

-- ===================================================
-- 3. VERIFY DATA - KIỂM TRA DỮ LIỆU
-- ===================================================

-- Kiểm tra Members
SELECT 
    Id,
    FullName,
    Phone,
    Email,
    Gender,
    TO_CHAR(DateOfBirth, 'DD/MM/YYYY') as DateOfBirth,
    TO_CHAR(JoinDate, 'DD/MM/YYYY') as JoinDate,
    CASE WHEN IsActive = 1 THEN 'Hoạt động' ELSE 'Không hoạt động' END as Status
FROM Members 
WHERE FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')
ORDER BY Id;

-- Kiểm tra Membership Cards
SELECT 
    mc.Id,
    m.FullName,
    p.PackageName,
    TO_CHAR(mc.StartDate, 'DD/MM/YYYY') as StartDate,
    TO_CHAR(mc.EndDate, 'DD/MM/YYYY') as EndDate,
    mc.Price,
    mc.PaymentMethod,
    mc.Status,
    TRUNC(mc.EndDate - SYSDATE) as DaysRemaining,
    CASE 
        WHEN mc.EndDate >= SYSDATE THEN 'Còn hạn'
        ELSE 'Hết hạn'
    END as MembershipStatus
FROM MembershipCards mc
INNER JOIN Members m ON mc.MemberId = m.Id
INNER JOIN Packages p ON mc.PackageId = p.Id
WHERE m.FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')
ORDER BY mc.Id;

-- Kiểm tra qua View V_MemberInfo
SELECT 
    Id,
    FullName,
    Phone,
    PackageName,
    TO_CHAR(StartDate, 'DD/MM/YYYY') as StartDate,
    TO_CHAR(EndDate, 'DD/MM/YYYY') as EndDate,
    Price,
    MembershipStatus,
    DaysRemaining,
    CASE 
        WHEN DaysRemaining > 30 THEN '🟢 Tốt'
        WHEN DaysRemaining BETWEEN 8 AND 30 THEN '🟡 Bình thường'
        WHEN DaysRemaining BETWEEN 1 AND 7 THEN '🟠 Cảnh báo'
        WHEN DaysRemaining = 0 THEN '🔴 Hết hạn hôm nay'
        ELSE '⚫ Đã hết hạn'
    END as Alert
FROM V_MemberInfo 
WHERE FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')
ORDER BY DaysRemaining DESC;

-- ===================================================
-- 4. SUMMARY STATISTICS
-- ===================================================

SELECT 
    'Tổng thành viên' as Metric,
    COUNT(*) as Value
FROM Members 
WHERE FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')

UNION ALL

SELECT 
    'Tổng thẻ tập' as Metric,
    COUNT(*) as Value
FROM MembershipCards mc
INNER JOIN Members m ON mc.MemberId = m.Id
WHERE m.FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')

UNION ALL

SELECT 
    'Thẻ còn hạn' as Metric,
    COUNT(*) as Value
FROM V_MemberInfo 
WHERE FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải')
AND MembershipStatus = 'Còn hạn'

UNION ALL

SELECT 
    'Tổng doanh thu' as Metric,
    SUM(Price) as Value
FROM V_MemberInfo 
WHERE FullName IN ('Lê Minh Tuấn', 'Phạm Thị Hoa', 'Hoàng Văn Đức', 'Nguyễn Thị Mai', 'Vũ Minh Hải');

COMMIT;